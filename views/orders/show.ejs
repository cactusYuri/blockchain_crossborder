<%- include('../partials/header') %>

<div class="card mb-4">
  <div class="card-header">
    <div class="d-flex justify-content-between align-items-center">
      <h2 class="mb-0">订单详情</h2>
      <span class="badge 
        <% if (order.status === 'pending') { %>bg-warning<% } %>
        <% if (order.status === 'shipped') { %>bg-primary<% } %>
        <% if (order.status === 'delivered') { %>bg-info<% } %>
        <% if (order.status === 'reviewed') { %>bg-success<% } %>
        fs-6" id="order-status-badge">
        <%= order.status %> <%# 直接显示状态，更灵活 %>
      </span>
    </div>
  </div>
  <div class="card-body">
    <div class="row">
      <div class="col-md-4">
        <h5>订单信息</h5>
        <p><strong>订单编号:</strong> <%= order.id %></p>
        <p><strong>创建时间:</strong> <%= new Date(order.createdAt).toLocaleString() %></p>
        <p><strong>总价:</strong> <%= order.totalPrice.toFixed(2) %> DEMO </p> <%# 标记为 DEMO %>
        <p><strong>数量:</strong> <%= order.quantity %></p>
        
        <% if (order.shippedAt) { %>
          <p><strong>发货时间:</strong> <%= new Date(order.shippedAt).toLocaleString() %></p>
          <p><strong>物流单号:</strong> <%= order.trackingNumber || 'N/A' %></p>
        <% } %>
        
        <% if (order.deliveredAt) { %>
          <p><strong>送达时间:</strong> <%= new Date(order.deliveredAt).toLocaleString() %></p>
        <% } %>

        <% if (order.blockchainTxId) { %>
           <p><strong>链上交易ID (创建):</strong> <small><%= order.blockchainTxId.substring(0,16) %>...</small></p>
        <% } %>
      </div>
      
      <div class="col-md-4">
        <h5>商品信息</h5>
        <div class="d-flex align-items-center mb-3">
          <img src="<%= product.imageUrl %>" alt="<%= product.name %>" style="width: 80px; height: 80px; object-fit: cover; margin-right: 10px;">
          <div>
            <h6><%= product.name %></h6>
            <p class="text-primary">¥<%= product.price.toFixed(2) %> × <%= order.quantity %></p>
            <p><strong>卖家:</strong> <span id="merchant-name"><%= seller.name %></span> (<span id="merchant-id" data-id="<%= seller.id %>">ID: <%= seller.id.substring(0,8) %></span>)</p>
            <div id="merchant-reputation">
              <small class="text-muted">正在加载商家信誉...</small>
            </div>
          </div>
        </div>
        <p><strong>描述:</strong> <%= product.description %></p>
        <p><a href="/products/<%= product.id %>" class="btn btn-sm btn-outline-primary">查看商品详情</a></p>
      </div>
      
      <div class="col-md-4">
        <h5>买家信息</h5>
        <p><strong>买家:</strong> <%= buyer.name %></p>
        <p><strong>ID:</strong> <%= buyer.id.substring(0,8) %></p>
      </div>
    </div>
    
    <hr>

    <%# --- 卖家操作 --- %>
    <% if (order.status === 'pending' && user && user.id === order.sellerId) { %>
      <h5>卖家操作</h5>
      <form action="/orders/<%= order.id %>/ship" method="POST" class="mb-3">
        <div class="mb-3">
          <label for="trackingNumber" class="form-label">物流单号</label>
          <input type="text" class="form-control" id="trackingNumber" name="trackingNumber" placeholder="输入物流单号（可选）">
        </div>
        <div class="mb-3">
          <label for="shipPassword" class="form-label">您的密码 (用于签名)</label>
          <input type="password" class="form-control" id="shipPassword" name="password" required>
        </div>
        <button type="submit" class="btn btn-primary">确认发货</button>
      </form>
    <% } %>

    <%# --- 买家操作 --- %>
    <% if (user && user.id === order.buyerId) { %>
      <h5>买家操作</h5>
      <%# 确认收货 %>
      <% if (order.status === 'shipped') { %>
        <form action="/orders/<%= order.id %>/deliver" method="POST" class="mb-3">
             <div class="mb-3">
               <label for="deliverPassword" class="form-label">您的密码 (用于签名)</label>
               <input type="password" class="form-control" id="deliverPassword" name="password" required>
             </div>
            <button type="submit" class="btn btn-success">确认收货</button>
            <small class="ms-2 text-muted">确认您已收到商品</small>
        </form>
      <% } %>

      <%# 评价订单 - 仅在 delivered 状态下且未评价时显示表单 %>
      <div id="review-section" class="mt-3">
        <h6>评价订单</h6>
        <form id="review-form" style="display: none;" data-order-id="<%= order.id %>" data-seller-id="<%= seller.id %>">
            <div class="mb-3">
                <label class="form-label d-block">评分</label> <%# 使用 d-block %>
                <div id="rating-stars" class="mb-2">
                    <input type="radio" name="rating" id="rating-5" value="5" required><label for="rating-5">★</label>
                    <input type="radio" name="rating" id="rating-4" value="4"><label for="rating-4">★</label>
                    <input type="radio" name="rating" id="rating-3" value="3"><label for="rating-3">★</label>
                    <input type="radio" name="rating" id="rating-2" value="2"><label for="rating-2">★</label>
                    <input type="radio" name="rating" id="rating-1" value="1"><label for="rating-1">★</label>
                </div>
            </div>
            <div class="mb-3">
              <label for="comment" class="form-label">评价内容 (可选)</label>
              <textarea class="form-control" id="comment" name="comment" rows="3"></textarea>
            </div>
            <div class="mb-3">
               <label for="reviewPassword" class="form-label">您的密码 (用于签名)</label>
               <input type="password" class="form-control" id="reviewPassword" name="password" required>
            </div>
            <button type="submit" class="btn btn-primary">提交评价</button>
            <div id="review-message" class="mt-2"></div>
        </form>
        <div id="review-display" class="mt-2" style="display: none;"></div>
        <div id="review-loading" class="text-muted"></div>
      </div>
    <% } %>

    <%# --- 通用操作区域 (买卖双方或管理员可见) --- %>
    <hr>
    <div id="dispute-section" data-disputes="<%- JSON.stringify(disputes || []).replace(/'/g, '\\'').replace(/"/g, '\'') %>"> <%# 将数据存储在 data 属性中，转义引号 %>
        <h5>交易争议</h5>
        <div id="disputes-list" class="mb-3">
             <%# 争议列表将由 JS 填充 %>
             <p class="text-muted">正在加载争议信息...</p>
        </div>
        <%# 仅当用户是订单参与方且状态允许时才显示发起按钮 %>
        <% if (user && (user.id === order.buyerId || user.id === order.sellerId) && ['shipped', 'delivered', 'reviewed'].includes(order.status)) { %>
            <button id="open-dispute-btn" class="btn btn-warning btn-sm" style="display: none;"> <%# JS 会根据是否已有争议来显示 %>
              <i class="fas fa-exclamation-triangle"></i> 发起争议
            </button>
            <form id="open-dispute-form" class="mt-2 border p-3 rounded bg-light" style="display: none;" data-order-id="<%= order.id %>" data-defendant-id="<%= user.id === order.buyerId ? seller.id : buyer.id %>">
                 <h6>发起新争议</h6>
                 <div class="mb-3">
                    <label for="disputeReason" class="form-label">争议原因</label>
                    <textarea class="form-control" id="disputeReason" name="reason" rows="3" required></textarea>
                 </div>
                 <div class="mb-3">
                    <label for="disputePassword" class="form-label">您的密码 (用于签名)</label>
                    <input type="password" class="form-control" id="disputePassword" name="password" required>
                 </div>
                 <button type="submit" class="btn btn-danger">确认发起</button>
                 <button type="button" class="btn btn-secondary ms-2" onclick="document.getElementById('open-dispute-form').style.display='none'; document.getElementById('open-dispute-btn').style.display='inline-block';">取消</button>
                 <div id="dispute-message" class="mt-2"></div>
            </form>
        <% } else if (user && (user.id === order.buyerId || user.id === order.sellerId)) { %>
            <p class="text-muted"><small>订单当前状态 (<%= order.status %>) 不支持发起争议。</small></p>
        <% } %>
    </div>

  </div>
  <div class="card-footer">
    <a href="/orders" class="btn btn-outline-secondary">返回订单列表</a>
  </div>
</div>

<!-- 添加 CSS 实现星星评分效果 -->
<style>
#rating-stars {
    display: inline-block;
    direction: rtl; /* 让星星从右到左排列 */
}
#rating-stars input[type="radio"] {
    display: none; /* 隐藏原始 radio 按钮 */
}
#rating-stars label {
    font-size: 1.8em;
    color: lightgray;
    cursor: pointer;
    padding: 0 2px;
}
#rating-stars label:hover,
#rating-stars label:hover ~ label,
#rating-stars input[type="radio"]:checked ~ label {
    color: orange;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', async () => {
    const orderId = "<%= order.id %>";
    const sellerId = "<%= seller.id %>";
    const buyerId = "<%= buyer.id %>";
    const currentUserId = "<%= user ? user.id : null %>";
    const orderStatus = "<%= order.status %>";

    const reviewSection = document.getElementById('review-section');
    const reviewForm = document.getElementById('review-form');
    const reviewDisplayDiv = document.getElementById('review-display');
    const reviewLoadingDiv = document.getElementById('review-loading');
    const reviewMessageDiv = document.getElementById('review-message');
    const merchantReputationDiv = document.getElementById('merchant-reputation');

    const disputeSection = document.getElementById('dispute-section');
    const disputesListDiv = document.getElementById('disputes-list');
    const openDisputeBtn = document.getElementById('open-dispute-btn');
    const openDisputeForm = document.getElementById('open-dispute-form');
    const disputeMessageDiv = document.getElementById('dispute-message');

    let sellerReputation = null;
    // 从 data 属性读取并解析争议数据
    let orderDisputes = []; 
    try {
        const disputesDataString = disputeSection.dataset.disputes.replace(/\'/g, '"'); // 替换回双引号
        orderDisputes = JSON.parse(disputesDataString || '[]');
    } catch (e) {
        console.error("Failed to parse disputes data:", e);
        disputesListDiv.innerHTML = '<p class="text-danger">加载争议信息时出错 (数据解析失败)。</p>';
    }
    let userHasReviewed = false;

    // --- 加载商家信誉 --- 
    async function loadMerchantReputation() {
        merchantReputationDiv.innerHTML = '<small class="text-muted">正在加载商家信誉...</small>';
        try {
            const response = await fetch(`/api/reviews/reputation/${sellerId}`);
            if (!response.ok) throw new Error('Failed to fetch reputation');
            const result = await response.json();
            if (result.success) {
                sellerReputation = result.reputation;
                const score = sellerReputation.score ? sellerReputation.score.toFixed(1) : 'N/A';
                const count = sellerReputation.count || 0;
                merchantReputationDiv.innerHTML = `
                    <small>信誉: ${score}/5 (${count}条评价)</small>
                `;
                // 检查用户是否已评价
                if (sellerReputation.reviews && currentUserId) {
                    userHasReviewed = sellerReputation.reviews.some(r => r.orderId === orderId && r.buyerPublicKey === "<%= user ? user.publicKey : '' %>");
                }
            } else {
                 merchantReputationDiv.innerHTML = '<small class="text-danger">加载信誉失败</small>';
            }
        } catch (error) {
            console.error('Error fetching merchant reputation:', error);
            merchantReputationDiv.innerHTML = '<small class="text-danger">加载信誉失败</small>';
        }
    }

    // --- 检查和显示评价区域 --- 
    function checkReviewDisplay() {
        if (!reviewSection || !currentUserId || currentUserId !== buyerId) {
             if(reviewLoadingDiv) reviewLoadingDiv.style.display = 'none';
             return; // 非买家不处理评价
        }

        reviewLoadingDiv.textContent = '检查评价状态...';
        const existingReview = sellerReputation?.reviews?.find(r => r.orderId === orderId);

        if (existingReview) {
            reviewLoadingDiv.style.display = 'none';
            reviewForm.style.display = 'none';
            reviewDisplayDiv.style.display = 'block';
            let starsHtml = '';
            for(let i=0; i<5; i++) { starsHtml += i < existingReview.rating ? '<span class="text-warning">★</span>' : '<span class="text-secondary">☆</span>'; }
            reviewDisplayDiv.innerHTML = `
                <p><strong>您的评价 (${new Date(existingReview.timestamp).toLocaleString()}):</strong></p>
                <p>${starsHtml} (${existingReview.rating}/5)</p>
                <p>${existingReview.commentHash ? '评论内容已记录 (哈希: ' + existingReview.commentHash.substring(0,10) + '...)' : '未填写评论。'}</p>
                <p><small>交易ID: ${existingReview.txId.substring(0,16)}...</small></p>
                <span class="badge bg-success">已评价</span>
            `;
        } else if (orderStatus === 'delivered') {
            reviewLoadingDiv.style.display = 'none';
            reviewForm.style.display = 'block';
            reviewDisplayDiv.style.display = 'none';
        } else {
            reviewLoadingDiv.textContent = '订单状态非"已送达"，暂不能评价。';
            reviewForm.style.display = 'none';
            reviewDisplayDiv.style.display = 'none';
        }
    }

    // --- 处理评价表单提交 --- 
    if (reviewForm) {
        reviewForm.addEventListener('submit', async (event) => {
            event.preventDefault();
            reviewMessageDiv.textContent = '正在提交...';
            reviewMessageDiv.className = 'mt-2 alert alert-info';

            const ratingInput = reviewForm.querySelector('input[name="rating"]:checked');
            const rating = ratingInput ? ratingInput.value : null;
            const comment = reviewForm.querySelector('#comment').value;
            const password = reviewForm.querySelector('#reviewPassword').value;

            if (!rating) {
                reviewMessageDiv.textContent = '请选择评分！';
                reviewMessageDiv.className = 'mt-2 alert alert-danger';
                return;
            }
            if (!password) {
                 reviewMessageDiv.textContent = '请输入密码！';
                 reviewMessageDiv.className = 'mt-2 alert alert-danger';
                 return;
            }

            try {
                const response = await fetch('/api/reviews', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ orderId, rating, comment, password }),
                });
                const result = await response.json();

                if (!response.ok || !result.success) {
                    throw new Error(result.message || `HTTP error! status: ${response.status}`);
                }

                reviewMessageDiv.textContent = '评价提交成功！';
                reviewMessageDiv.className = 'mt-2 alert alert-success';
                reviewForm.style.display = 'none'; // 隐藏表单
                // 重新加载信誉并显示评价
                await loadMerchantReputation();
                checkReviewDisplay();

            } catch (error) {
                console.error('Error submitting review:', error);
                reviewMessageDiv.textContent = `评价提交失败: ${error.message}`;
                reviewMessageDiv.className = 'mt-2 alert alert-danger';
            }
        });
    }

    // --- 加载/显示争议信息 (使用从 EJS 传入的数据) --- 
    function displayDisputes() {
         disputesListDiv.innerHTML = ''; // 清空加载提示
         if (orderDisputes.length === 0) {
              disputesListDiv.innerHTML = '<p class="text-muted">此订单暂无争议记录。</p>';
         } else {
             orderDisputes.forEach(dispute => {
                 const disputeElement = document.createElement('div');
                 let statusClass = 'alert-warning';
                 if (dispute.status === 'RESOLVED') statusClass = 'alert-success';
                 if (dispute.status === 'OPEN' || dispute.status === 'EVIDENCE_GATHERING') statusClass = 'alert-danger';
                 
                 disputeElement.className = `alert ${statusClass}`;
                 disputeElement.innerHTML = `
                    <strong>争议 #${dispute.disputeId ? dispute.disputeId.substring(0,8) : 'N/A'}...</strong> (状态: ${dispute.status})<br>
                    原因: ${dispute.reason}<br>
                    <small>发起时间: ${new Date(dispute.createdAt || dispute.timestamp).toLocaleString()}</small><br>
                    <a href="/disputes/${dispute.disputeId}" target="_blank" class="btn btn-sm btn-outline-secondary mt-1">查看详情与处理</a>
                 `; 
                 disputesListDiv.appendChild(disputeElement);
             });
         }
         // 控制发起争议按钮的显示
         if (openDisputeBtn) {
             // 仅在没有争议时显示发起按钮
             openDisputeBtn.style.display = orderDisputes.length === 0 ? 'inline-block' : 'none';
         }
    }

    // --- 处理发起争议 --- 
    if (openDisputeBtn) {
        openDisputeBtn.addEventListener('click', () => {
            openDisputeForm.style.display = 'block';
            openDisputeBtn.style.display = 'none'; // 点击后隐藏按钮
        });
    }
    if (openDisputeForm) {
         openDisputeForm.addEventListener('submit', async (event) => {
             event.preventDefault();
             disputeMessageDiv.textContent = '正在提交...';
             disputeMessageDiv.className = 'mt-2 alert alert-info';

             const reason = openDisputeForm.querySelector('#disputeReason').value;
             const password = openDisputeForm.querySelector('#disputePassword').value;
             const defendantId = openDisputeForm.dataset.defendantId;
             const formOrderId = openDisputeForm.dataset.orderId; // 从表单获取 orderId

             if (!reason || !password) {
                 disputeMessageDiv.textContent = '请填写原因和密码！';
                 disputeMessageDiv.className = 'mt-2 alert alert-danger';
                 return;
             }

             try {
                 const response = await fetch('/api/disputes', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ orderId: formOrderId, reason, defendantId, password }),
                 });
                 const result = await response.json();
                 if (!response.ok || !result.success) {
                     throw new Error(result.message || `HTTP error! status: ${response.status}`);
                 }
                 disputeMessageDiv.textContent = '争议已成功发起！请稍后刷新页面查看，或前往争议详情页处理。 TX ID: ' + result.transactionId;
                 disputeMessageDiv.className = 'mt-2 alert alert-success';
                 openDisputeForm.reset();
                 openDisputeForm.style.display = 'none'; // 隐藏表单
                 // 不需要在这里刷新争议列表，因为没有返回新的 disputeId
                 // loadDisputes(); // 如果 API 返回了新 dispute 对象可以取消注释

             } catch (error) {
                 console.error('Error opening dispute:', error);
                 disputeMessageDiv.textContent = `发起争议失败: ${error.message}`;
                 disputeMessageDiv.className = 'mt-2 alert alert-danger';
                 // 出错时，重新显示发起按钮
                  if (openDisputeBtn && orderDisputes.length === 0) {
                      openDisputeBtn.style.display = 'inline-block';
                  }
             }
         });
    }

    // --- 初始化加载 --- 
    await loadMerchantReputation();
    checkReviewDisplay(); 
    displayDisputes(); // 直接使用 EJS 传入的数据显示争议
});
</script>

<%- include('../partials/footer') %> 