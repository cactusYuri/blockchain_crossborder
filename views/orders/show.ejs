<%- include('../partials/header') %>

<div class="card mb-4">
  <div class="card-header">
    <div class="d-flex justify-content-between align-items-center">
      <h2 class="mb-0">订单详情</h2>
      <span class="badge 
        <% if (order.status === 'pending') { %>bg-warning<% } %>
        <% if (order.status === 'shipped') { %>bg-primary<% } %>
        <% if (order.status === 'delivered') { %>bg-info<% } %>
        <% if (order.status === 'reviewed') { %>bg-success<% } %>
        fs-6" id="order-status-badge">
        <% if (order.status === 'pending') { %>待发货<% } %>
        <% if (order.status === 'shipped') { %>已发货<% } %>
        <% if (order.status === 'delivered') { %>已送达<% } %>
        <% if (order.status === 'reviewed') { %>已评价<% } %>
      </span>
    </div>
  </div>
  <div class="card-body">
    <div class="row">
      <div class="col-md-4">
        <h5>订单信息</h5>
        <p><strong>订单编号:</strong> <%= order.id %></p>
        <p><strong>创建时间:</strong> <%= new Date(order.createdAt).toLocaleString() %></p>
        <p><strong>总价:</strong> ¥<%= order.totalPrice.toFixed(2) %></p>
        <p><strong>数量:</strong> <%= order.quantity %></p>
        
        <% if (order.shippedAt) { %>
          <p><strong>发货时间:</strong> <%= new Date(order.shippedAt).toLocaleString() %></p>
          <p><strong>物流单号:</strong> <%= order.trackingNumber || 'N/A' %></p>
        <% } %>
        
        <% if (order.reviewedAt) { %>
          <p><strong>评价时间:</strong> <%= new Date(order.reviewedAt).toLocaleString() %></p>
        <% } %>
      </div>
      
      <div class="col-md-4">
        <h5>商品信息</h5>
        <div class="d-flex align-items-center mb-3">
          <img src="<%= product.imageUrl %>" alt="<%= product.name %>" style="width: 80px; height: 80px; object-fit: cover; margin-right: 10px;">
          <div>
            <h6><%= product.name %></h6>
            <p class="text-primary">¥<%= product.price.toFixed(2) %> × <%= order.quantity %></p>
            <p><strong>卖家:</strong> <span id="merchant-name"><%= seller.name %></span> (<span id="merchant-id" data-id="<%= seller.id %>">ID: <%= seller.id.substring(0,8) %></span>)</p>
            <div id="merchant-reputation">
              <!-- 信誉信息将由 JS 填充 -->
              <small class="text-muted">正在加载商家信誉...</small>
            </div>
          </div>
        </div>
        <p><strong>描述:</strong> <%= product.description %></p>
        <p><a href="/products/<%= product.id %>" class="btn btn-sm btn-outline-primary">查看商品详情</a></p>
      </div>
      
      <div class="col-md-4">
        <h5>买家信息</h5>
        <p><strong>买家:</strong> <%= buyer.name %></p>
        <p><strong>ID:</strong> <%= buyer.id.substring(0,8) %></p>
      </div>
    </div>
    
    <!-- DEBUG START -->
    <!-- 
        Order Status: <%= order.status %> (Expected: 'pending')
        User Logged In: <%= !!user %> (Expected: true)
        User ID: <%= user ? user.id : 'N/A' %>
        Product Found: <%= !!product %> (Expected: true)
        Product Seller ID: <%= product ? product.sellerId : 'N/A' %>
        Condition (user.id === product.sellerId): <%= user && product ? (user.id === product.sellerId) : 'N/A' %> 
    -->
    <!-- DEBUG END -->
    
    <% if (order.status && order.status.toLowerCase() === 'pending' && user && product && user.id === product.sellerId) { %>
      <hr>
      <h5>卖家操作</h5>
      <form action="/orders/<%= order.id %>/ship" method="POST" class="mb-3">
        <div class="mb-3">
          <label for="trackingNumber" class="form-label">物流单号</label>
          <input type="text" class="form-control" id="trackingNumber" name="trackingNumber" placeholder="输入物流单号（可选）">
        </div>
        <button type="submit" class="btn btn-primary">确认发货</button>
      </form>
    <% } %>

    <%# 买家确认收货按钮 %>
    <% if (order.status && order.status.toLowerCase() === 'shipped' && user && user.id === order.buyerId) { %>
        <hr>
        <h5>买家操作</h5>
        <form action="/orders/<%= order.id %>/deliver" method="POST" class="mb-3">
            <button type="submit" class="btn btn-success">确认收货</button>
            <small class="ms-2 text-muted">确认您已收到商品</small>
        </form>
    <% } %>

    <hr>
    <!-- 评价区域 -->
    <div id="review-section">
        <h5>买家评价</h5>
        <!-- 评价表单 (仅在特定条件下由JS显示) -->
        <form id="review-form" style="display: none;" data-order-id="<%= order.id %>" data-merchant-id="<%= seller.id %>">
            <div class="mb-3">
                <label for="rating" class="form-label">评分</label>
                <div id="rating-stars">
                    <!-- 星星将由 JS 生成 -->
                    <input type="radio" name="rating" id="rating-5" value="5" required><label for="rating-5">★</label>
                    <input type="radio" name="rating" id="rating-4" value="4"><label for="rating-4">★</label>
                    <input type="radio" name="rating" id="rating-3" value="3"><label for="rating-3">★</label>
                    <input type="radio" name="rating" id="rating-2" value="2"><label for="rating-2">★</label>
                    <input type="radio" name="rating" id="rating-1" value="1"><label for="rating-1">★</label>
                </div>
            </div>
            <div class="mb-3">
              <label for="comment" class="form-label">评价内容</label>
              <textarea class="form-control" id="comment" name="comment" rows="3"></textarea> <!-- required 移除，允许空评论？API里允许了 -->
            </div>
            <div class="alert alert-info">
              <small>提示：评价提交后将记录在模拟的"区块链"账本（JSON文件）中。</small>
            </div>
            <button type="submit" class="btn btn-primary">提交评价</button>
            <div id="review-message" class="mt-2"></div> <!-- 用于显示提交反馈 -->
        </form>

        <!-- 显示已存在的评价 (由JS填充) -->
        <div id="existing-review" style="display: none;">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <div>
                            <span id="review-rating-display" class="text-warning"></span>
                            <span id="review-rating-text" class="ms-2"></span>
                        </div>
                        <small id="review-timestamp" class="text-muted"></small>
                    </div>
                    <p id="review-comment-display"></p>
                    <div class="alert alert-success">
                        <small>评价已记录。</small>
                    </div>
                </div>
            </div>
        </div>

        <!-- 显示加载状态或提示信息 -->
        <div id="review-loading" class="text-muted">
            正在检查评价状态...
        </div>
    </div>

    <!-- 可以再加一个显示该商家其他评价的区域 -->
    <div id="merchant-reviews-section" class="mt-4">
        <h5>来自卖家 "<%= seller.name %>" 的其他评价</h5>
        <div id="merchant-reviews-list" class="list-group">
            <p class="text-muted">正在加载评价列表...</p>
        </div>
    </div>

  </div>
  <div class="card-footer">
    <a href="/orders" class="btn btn-outline-secondary">返回订单列表</a>
  </div>
</div>

<!-- 添加 CSS 实现星星评分效果 -->
<style>
#rating-stars {
    display: inline-block;
    direction: rtl; /* 让星星从右到左排列 */
}
#rating-stars input[type="radio"] {
    display: none; /* 隐藏原始 radio 按钮 */
}
#rating-stars label {
    font-size: 1.8em;
    color: lightgray;
    cursor: pointer;
    padding: 0 2px;
}
/* 鼠标悬停时点亮星星 */
#rating-stars label:hover,
#rating-stars label:hover ~ label,
#rating-stars input[type="radio"]:checked ~ label {
    color: orange;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', async () => {
    const reviewSection = document.getElementById('review-section');
    const reviewForm = document.getElementById('review-form');
    const existingReviewDiv = document.getElementById('existing-review');
    const reviewLoadingDiv = document.getElementById('review-loading');
    const reviewMessageDiv = document.getElementById('review-message');
    const merchantReputationDiv = document.getElementById('merchant-reputation');
    const merchantReviewsListDiv = document.getElementById('merchant-reviews-list');
    const orderStatus = document.getElementById('order-status-badge').textContent.trim();

    const orderId = reviewForm.dataset.orderId;
    const merchantId = reviewForm.dataset.merchantId;
    const currentUserId = "<%= user ? user.id : null %>"; // 从 EJS 获取当前用户 ID

    let hasUserReviewedThisOrder = false;

    // --- 1. 加载商家信誉 --- 
    async function loadMerchantReputation() {
        try {
            const response = await fetch(`/api/reviews/reputation/${merchantId}`);
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            const reputation = await response.json();
            let starsHtml = '';
            const avgRating = parseFloat(reputation.averageRating);
            const fullStars = Math.floor(avgRating);
            const halfStar = avgRating - fullStars >= 0.5 ? 1 : 0;
            const emptyStars = 5 - fullStars - halfStar;

            for(let i=0; i<fullStars; i++) starsHtml += '<span class="text-warning">★</span>';
            // 简单处理，不显示半星
            // if(halfStar) starsHtml += '<span class="text-warning">☆</span>'; // Placeholder for half star
            for(let i=0; i<5-fullStars; i++) starsHtml += '<span class="text-secondary">☆</span>';

            merchantReputationDiv.innerHTML = `
                <span>${starsHtml}</span>
                <span class="ms-1">${reputation.averageRating}</span>
                <small class="text-muted">(${reputation.reviewCount} 条评价)</small>
            `;
        } catch (error) {
            console.error('Error fetching merchant reputation:', error);
            merchantReputationDiv.innerHTML = '<small class="text-danger">无法加载商家信誉</small>';
        }
    }

    // --- 2. 加载商家所有评价列表 --- 
    async function loadMerchantReviews() {
        try {
            const response = await fetch(`/api/reviews/merchant/${merchantId}`);
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            const reviews = await response.json();
            merchantReviewsListDiv.innerHTML = ''; // 清空加载提示

            if (reviews.length === 0) {
                merchantReviewsListDiv.innerHTML = '<p class="text-muted">该商家暂无评价。</p>';
                return;
            }

            reviews.forEach(review => {
                 // 检查当前用户是否评价过此订单
                if (review.orderId === orderId && review.userId === currentUserId) {
                    hasUserReviewedThisOrder = true;
                    displayExistingReview(review); // 如果找到当前用户的评价，直接显示
                }

                const reviewElement = document.createElement('div');
                reviewElement.className = 'list-group-item list-group-item-action flex-column align-items-start mb-2';
                
                let starsHtml = '';
                for(let i=0; i<5; i++) {
                    starsHtml += i < review.rating ? '<span class="text-warning">★</span>' : '<span class="text-secondary">☆</span>';
                }

                reviewElement.innerHTML = `
                    <div class="d-flex w-100 justify-content-between">
                        <h6 class="mb-1">用户: ${review.userId.substring(0, 8)}...</h6>
                        <small>${new Date(review.timestamp).toLocaleString()}</small>
                    </div>
                    <p class="mb-1">${starsHtml} (${review.rating}/5)</p>
                    <p class="mb-1">${review.comment || '用户未填写评论内容'}</p>
                    <small>订单: ${review.orderId.substring(0, 8)}...</small>
                `;
                merchantReviewsListDiv.appendChild(reviewElement);
            });

            // 检查完所有评价后，决定是否显示评价表单
            checkAndShowReviewForm();

        } catch (error) {
            console.error('Error fetching merchant reviews:', error);
            merchantReviewsListDiv.innerHTML = '<p class="text-danger">无法加载评价列表。</p>';
            reviewLoadingDiv.style.display = 'none'; // 隐藏加载提示
        }
    }

    // --- 3. 显示已评价内容 --- 
    function displayExistingReview(review) {
        reviewLoadingDiv.style.display = 'none';
        reviewForm.style.display = 'none';
        existingReviewDiv.style.display = 'block';
        
        let starsHtml = '';
        for(let i=0; i<5; i++) {
            starsHtml += i < review.rating ? '<span class="text-warning">★</span>' : '<span class="text-secondary">☆</span>';
        }
        document.getElementById('review-rating-display').innerHTML = starsHtml;
        document.getElementById('review-rating-text').textContent = `${review.rating}/5`;
        document.getElementById('review-timestamp').textContent = new Date(review.timestamp).toLocaleString();
        document.getElementById('review-comment-display').textContent = review.comment || '用户未填写评论内容';
        hasUserReviewedThisOrder = true; // 标记已评价
    }

    // --- 4. 检查是否显示评价表单 --- 
    function checkAndShowReviewForm() {
        reviewLoadingDiv.style.display = 'none'; // 隐藏加载提示
        // 条件：订单状态已送达或已评价，当前是买家，且尚未评价此订单
        const canReview = ['已送达', '已评价'].includes(orderStatus) && currentUserId && currentUserId === "<%= buyer.id %>";

        if (canReview && !hasUserReviewedThisOrder) {
            existingReviewDiv.style.display = 'none';
            reviewForm.style.display = 'block';
        } else if (hasUserReviewedThisOrder) {
            // 如果已评价，确保显示的是已评价内容而不是表单
        } else {
            // 不满足评价条件
            existingReviewDiv.style.display = 'none';
            reviewForm.style.display = 'none';
            // 检查 reviewSection 是否仍然存在，避免在已添加提示后再次添加
            if (!reviewSection.querySelector('.cannot-review-message')) {
                 const noReviewMsg = document.createElement('p');
                 noReviewMsg.className = 'text-muted cannot-review-message';
                 noReviewMsg.textContent = '订单完成后或当前状态下无法评价。';
                 reviewSection.appendChild(noReviewMsg);
            }
        }
    }

    // --- 5. 处理表单提交 --- 
    reviewForm.addEventListener('submit', async (event) => {
        event.preventDefault();
        reviewMessageDiv.textContent = '正在提交...';
        reviewMessageDiv.className = 'mt-2 alert alert-info';

        const ratingInput = reviewForm.querySelector('input[name="rating"]:checked');
        const rating = ratingInput ? ratingInput.value : null;
        const comment = document.getElementById('comment').value;

        if (!rating) {
            reviewMessageDiv.textContent = '请选择评分！';
            reviewMessageDiv.className = 'mt-2 alert alert-danger';
            return;
        }

        const reviewData = {
            merchantId: merchantId,
            orderId: orderId,
            rating: parseInt(rating, 10),
            comment: comment,
            // userId 会在后端从 session 获取，或者如果需要前端传就这样加
            // userId: currentUserId 
        };

        try {
            const response = await fetch('/api/reviews', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(reviewData),
            });

            const result = await response.json();

            if (!response.ok) {
                throw new Error(result.message || `HTTP error! status: ${response.status}`);
            }

            reviewMessageDiv.textContent = '评价提交成功！';
            reviewMessageDiv.className = 'mt-2 alert alert-success';
            // 提交成功后，隐藏表单，显示评价内容，并更新商家信誉和列表
            displayExistingReview(result); 
            loadMerchantReputation(); // 重新加载信誉
            loadMerchantReviews(); // 重新加载列表（会包含新评价）

        } catch (error) {
            console.error('Error submitting review:', error);
            reviewMessageDiv.textContent = `评价提交失败: ${error.message}`;
            reviewMessageDiv.className = 'mt-2 alert alert-danger';
        }
    });

    // --- 初始化加载 --- 
    loadMerchantReputation();
    loadMerchantReviews(); // 这个函数会检查并决定是否显示表单

});
</script>

<%- include('../partials/footer') %> 